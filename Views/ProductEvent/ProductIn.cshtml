@model ProductBarcodeModel

@using VNSStoreMgmt.Areas.Identity.Data
@using VNSStoreMgmt.Data
@using Microsoft.AspNetCore.Identity

@inject ApplicationDbContext _repository
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> _userManager

@{
    ViewData["Title"] = "Event";
    ViewData["ActivePage"] = "ProductEvent";
    var user = await _userManager.GetUserAsync(User);
    var isadmin = await _userManager.IsInRoleAsync(user, "admin");
}

<div class="content-wrapper">
    <section class="content">
        <div class="row">
            <!-- Form controls -->

            <div class="col-sm-12">
                <div class="panel panel-bd ">
                    <div class="panel-heading">
                        <div class="btn-group" id="buttonlist">
                            Add Product Event
                        </div>
                    </div>
                    <div class="panel-body">

                        <div class="col-sm-12">
                            <div class="col-sm-6">

                                <form method="POST" id="frmProductIn">
                                    <div class="row">
                                        <div class="col-sm-3 form-group">
                                            <div class="btn btn-success" style="width: 230px; height: 75px;">
                                                <h1 style="margin: 13px 0px;">
                                                    <i class="fa fa-sign-in"></i>
                                                    IN
                                                </h1>
                                            </div>
                                        </div>
                                    </div>

                                    <div asp-validation-summary="All" class="text-danger"></div>

                                    <div class="row">
                                        <div class="col-sm-8 form-group">
                                            <label>Product Barcode</label>
                                            <textarea asp-for="ProductBarcode" rows="8" class="form-control" placeholder="Enter Product Barcode"></textarea>
                                            @if (Context.Request.Query["date"].ToString() != null)
                                            {
                                                DateTime temp;
                                                if (!DateTime.TryParse(Context.Request.Query["date"].ToString(), out temp))
                                                {
                                                    Context.Response.Redirect("/Home/Index");
                                                }
                                                else
                                                {
                                                    <input id="hdnDate" asp-for="Date" type="hidden" value="@Context.Request.Query["date"].ToString()" />
                                                }
                                            }
                                            @*<input asp-for="ProductBarcode" autofocus class="form-control disable" placeholder="Enter Product Barcode" />*@
                                        </div>
                                    </div>

                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <i class="fa fa-save"></i>
                                        Submit
                                    </button>

                                </form>

                                @if (ViewBag.Acc != null)
                                {
                                    <br />
                                    <form id="frmSubmit" action="javascript: void(0)">
                                        <div class="row">
                                            <div class="col-sm-8 form-group">
                                                <input id="UserId" autofocus class="form-control" placeholder="Received By" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-sm-8 form-group">
                                                <textarea id="txtRemark" class="form-control" placeholder="Remark" rows="3"></textarea>
                                            </div>
                                        </div>

                                        <button id="btnSave" class="btn btn-primary btn-sm">
                                            <i class="fa fa-save"></i>
                                            Receive
                                        </button>
                                    </form>
                                }

                            </div>
                            <div class="col-sm-6">
                                @if (ViewBag.Acc != null)
                                {
                                    var accountabilities = ViewBag.Acc as List<Accountability>;
                                    List<string> str = new List<string>();

                                    <table class="ui celled table defaultDatatable">
                                        <thead>
                                            <tr class="info">
                                                <th>Id</th>
                                                <th>Product Name</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var accountability in accountabilities)
                                            {
                                                var pm = _repository.ProductMasters.FirstOrDefault(p => p.Id == accountability.ProductId);
                                                str.Add(pm.ProductBarcode);
                                                <tr>
                                                    <td>@pm.Id</td>
                                                    <td>

                                                        <h4>@pm.ProductCode | @pm.ProductName</h4>
                                                        <i>Description : <b>@pm.ProductDescription</b></i><br />
                                                        <i>Out remark : <b>@accountability.OutRemark</b></i><br />
                                                        <i>Out by : <b>@accountability.ProductOutBy</b></i><br />
                                                        <i>Out Time : <b>@accountability.OutDate.ToString("hh:mm tt")</b></i>
                                                        <i>Serial No : <b>@pm.SerialNo</b></i>
                                                    </td>

                                                </tr>

                                            }
                                        </tbody>
                                    </table>
                                    <input id="txtBarcode" type="hidden" value="@string.Join(",", str)" />
                                }
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-sm-12">
                                <table class="ui celled table example">
                                    <thead>
                                        <tr class="info">
                                            <th>Id</th>
                                            <th>Product Name</th>
                                            <th>Received Status</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Context.Request.Query["date"].ToString() != null)
                                        {
                                            DateTime temp;
                                            if (!DateTime.TryParse(Context.Request.Query["date"].ToString(), out temp))
                                            {
                                                Context.Response.Redirect("/Home/Index");
                                            }
                                            else
                                            {
                                                DateTime dt = Convert.ToDateTime(Context.Request.Query["date"].ToString());

                                                if (dt != null)
                                                {
                                                    if (_repository.Accountabilities.Where(p => p.OutDate.Date == dt.Date).ToList().Count() > 0)
                                                    {
                                                        foreach (var item in _repository.Accountabilities.Where(p => p.OutDate.Date == dt.Date).ToList())
                                                        {
                                                            var prod = await _repository.ProductMasters.FindAsync(item.ProductId);
                                                            <tr>
                                                                <td>@item.Id</td>
                                                                <td>
                                                                    <h4>@prod.ProductCode | @prod.ProductName</h4>
                                                                    <i>Description : <b>@prod.ProductDescription</b></i><br />
                                                                    <i>Out remark : <b>@item.OutRemark</b></i><br />
                                                                    <i>Product Out by : <b>@item.ProductOutBy</b></i><br />
                                                                    <i>Product Out Date : <b>@item.OutDate.ToString("dd MMM yy hh:mm tt")</b></i>
                                                                </td>
                                                                <td>
                                                                    @if (!item.ProductInOut)
                                                                    {
                                                                        <i>In remark : <b>@item.InRemark</b></i><br />
                                                                        <i>Product Received by : <b>@item.ProductInBy</b></i><br />
                                                                        <i>Product Received On: <b>@item.InDate?.ToString("dd MMM yy hh:mm tt")</b></i>
                                                                    }

                                                                </td>
                                                                <th>
                                                                    @if (item.ProductInOut)
                                                                    {
                                                                        <a class="btn btn-danger btn-xs">
                                                                            Pending
                                                                        </a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <a class="btn btn-success btn-xs">
                                                                            Received
                                                                        </a>
                                                                    }

                                                                </th>
                                                            </tr>

                                                        }
                                                    }
                                                    else
                                                    {
                                                        Context.Response.Redirect("/Home/Index");
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            Context.Response.Redirect("/Home/Index");
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </section>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ProductBarcode").select();
        });

        $('.defaultDatatable').DataTable({
            paging: false,
            searching: false
        });

        $(document).on("click", "#btnSave", function (e) {
            e.preventDefault();

            var userId = $("#UserId").val();
            var remark = $("#txtRemark").val();
            var barcode = $("#txtBarcode").val();
            var date = $("#hdnDate").val();

            if (userId == "" || userId == null) {
                alert('Enter received by person name');
                return false;
            }

            if (remark == "" || remark == null) {
                alert('enter remark');
                return false;
            }

            var model = {
                Date: date,
                Barcode: barcode,
                UserId : userId,
                Remark: remark
            }

            //var d = getUrlParameter("data");

            if($('#frmSubmit').valid()){
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveProductIn", "ProductEvent")",
                    data: model,
                    dataType: "text",
                    success: function (data) {
                        window.location = '@Url.Action("ProductIn", "ProductEvent", new { date = Context.Request.Query["date"].ToString() })';
                        //console.log(data);
                        //window.location.replace(data);
                    }
                });
            };

        });

    </script>

    <style>
        .bg-info {
            background-color: #17a2b8 !important;
        }

        .bg-dark {
            background-color: #343a40 !important;
        }

        .card-title {
            margin-bottom: .75rem;
        }

        .card-body {
            -webkit-box-flex: 1;
            -ms-flex: 1 1 auto;
            flex: 1 1 auto;
            padding: 1.25rem;
        }

        .card-header:first-child {
            border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
        }

        .card-header {
            padding: .75rem 1.25rem;
            margin-bottom: 0;
            background-color: rgba(0,0,0,.03);
            border-bottom: 1px solid rgba(0,0,0,.125);
        }

        .card-footer:first-child {
            border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
        }

        .card-footer {
            padding: .75rem 1.25rem;
            margin-bottom: 0;
            background-color: rgba(0,0,0,.03);
            border-bottom: 1px solid rgba(0,0,0,.125);
        }

        .card-text:last-child {
            margin-bottom: 0;
        }
    </style>
}

